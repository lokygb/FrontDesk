//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.573.
// 
namespace FrontDesk.Data.Filesys.DataService {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FileDataWebGatewaySoap", Namespace="http://FrontDesk/WebServices")]
    public class FileDataWebGateway : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public ServiceTicket ServiceTicketValue;
        
        /// <remarks/>
        public FileDataWebGateway() {
            this.Url = "http://localhost/FrontDeskServices/filedataservice.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceTicketValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FrontDesk/WebServices/LoadFileData", RequestNamespace="http://FrontDesk/WebServices", ResponseNamespace="http://FrontDesk/WebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataEnvelope LoadFileData(int fileID) {
            object[] results = this.Invoke("LoadFileData", new object[] {
                        fileID});
            return ((DataEnvelope)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadFileData(int fileID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadFileData", new object[] {
                        fileID}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataEnvelope EndLoadFileData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataEnvelope)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceTicketValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FrontDesk/WebServices/CreateFile", RequestNamespace="http://FrontDesk/WebServices", ResponseNamespace="http://FrontDesk/WebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateFile(int fileID) {
            this.Invoke("CreateFile", new object[] {
                        fileID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateFile(int fileID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateFile", new object[] {
                        fileID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateFile(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceTicketValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FrontDesk/WebServices/DeleteFile", RequestNamespace="http://FrontDesk/WebServices", ResponseNamespace="http://FrontDesk/WebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFile(int fileID) {
            this.Invoke("DeleteFile", new object[] {
                        fileID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFile(int fileID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFile", new object[] {
                        fileID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteFile(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceTicketValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FrontDesk/WebServices/CommitData", RequestNamespace="http://FrontDesk/WebServices", ResponseNamespace="http://FrontDesk/WebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CommitData(int fileID, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] System.Byte[] data) {
            this.Invoke("CommitData", new object[] {
                        fileID,
                        data});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCommitData(int fileID, System.Byte[] data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CommitData", new object[] {
                        fileID,
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCommitData(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceTicketValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FrontDesk/WebServices/CopyFile", RequestNamespace="http://FrontDesk/WebServices", ResponseNamespace="http://FrontDesk/WebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CopyFile(int destID, int srcID) {
            this.Invoke("CopyFile", new object[] {
                        destID,
                        srcID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCopyFile(int destID, int srcID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CopyFile", new object[] {
                        destID,
                        srcID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCopyFile(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FrontDesk/WebServices/Authenticate", RequestNamespace="http://FrontDesk/WebServices", ResponseNamespace="http://FrontDesk/WebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceTicket Authenticate(string username, string password) {
            object[] results = this.Invoke("Authenticate", new object[] {
                        username,
                        password});
            return ((ServiceTicket)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAuthenticate(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Authenticate", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public ServiceTicket EndAuthenticate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ServiceTicket)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceTicketValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://FrontDesk/WebServices/Logout", RequestNamespace="http://FrontDesk/WebServices", ResponseNamespace="http://FrontDesk/WebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Logout() {
            this.Invoke("Logout", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogout(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Logout", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLogout(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://FrontDesk/WebServices")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://FrontDesk/WebServices", IsNullable=false)]
    public class ServiceTicket : System.Web.Services.Protocols.SoapHeader {
        
        /// <remarks/>
        public string Username;
        
        /// <remarks/>
        public System.Guid Ident;
        
        /// <remarks/>
        public string HostAddress;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://FrontDesk/WebServices")]
    public class DataEnvelope {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public System.Byte[] Data;
        
        /// <remarks/>
        public int Size;
    }
}
